# Spring Cloud Gateway를 사용하여 API Gateway를 구성하는 설정 파일
server:
  # API Gateway가 바인딩 될 포트 지정
  port: 8000

eureka:
  # Eureka 클라이언트 구성
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # Eureka Server의 위치를 지정
      defaultZone: http://localhost:8761/eureka

spring:
  # API Gateway 서비스 이름 지정
  application:
    name: apigateway-service
  # RabbitMQ를 사용하여 메시지를 전송하는 데 사용되는 구성
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      # 모든 라우팅에 적용되는 필터
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            # 요청 전과 후에 로그를 출력하는지 여부
            preLogger: true
            postLogger: true
      # 라우트 정의
      routes:
#        - id: user-service
#            uri: lb://USER-SERVICE
#            predicates:
#              - Path=/user-service/**
        # 라우터의 식별자
        - id: user-service
          # 요청을 보낼 서비스의 주소를 지정
          uri: lb://USER-SERVICE
          # 요청을 분류하기 위한 조건 지정
          predicates:
            - Path=/user-service/login
            - Method=POST
          # 요청에 대해 수행할 필터들을 지정
          filters:
            # Cookie 헤더를 제거
            - RemoveRequestHeader=Cookie
            # /user-service 제거
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

# JWT 토큰에 사용되는 비밀키 지정
token:
  secret: user_token

# Actuator의 엔드포인트를 노출할지 여부를 지정
# busrefresh: 서비스의 설정을 다시 로드할 수 있는 엔드포인트
# health: 서비스의 상태를 나타내는 엔드포인트
# httptrace: HTTP 요청 흐름을 추적하는 엔드포인트
management:
  endpoint:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh
