# User-Service 애플리케이션 구성 파일

# 애플리케이션의 서버 포트를 0으로 설정. 이는 랜덤 포트를 사용하여 애플리케이션을 실행하도록 한다.
server:
  port: 0

spring:
  application:
    name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb
#    username: sa
#    password: 1234

# Eureka에 등록되는 인스턴스 ID 설정
eureka:
  # server port를 0으로 지정하고 2개 이상의 user-service를 구동하면
  # Eureka server에 인스턴스가 1개만 뜨게된다.
  instance:
    # 각 인스턴스 마다 instance-id를 지정하여 인스턴스를 구분해준다.
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    # Eureka 서버로부터 인스턴스들의 정보를 가져올 것인지를 설정하는 속성
    # true로 설정하면, 갱신된 정보를 받겠다는 설정
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

greeting:
  message: Welcome to the Simple E-commerce.

# 로거의 로그 레벨을 DEBUG로 설정
logging:
  level:
    com.example.userservice.client: DEBUG

token:
  expiration_time: 86400000
  secret: user_token

# Spring Boot Actuator를 통해 노출할 엔드포인트 지정
management:
  endpoint:
    web:
      exposure:
        include: refresh, health, beans, busrefresh
